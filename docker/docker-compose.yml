version: '3.1'

services:
  db:
    container_name: royal-postgres
    image: postgres:13.1-alpine
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: docker
      POSTGRES_DB: db
    volumes:
      - royal-postgres:/var/lib/postgresql/data
      - ./postgresql.conf:/etc/postgresql/postgresql.conf
    networks:
      - royal-network
    ports:
      - 5432:5432

  backend_dev:
    container_name: royal_api_dev
    image: backend_dev:1.0.0
    build:
      context: ../
      target: dev
      dockerfile: ./docker/Dockerfile
    env_file: .env
    command: npm run start:debug
    ports:
      - 5000:5000
      - 9229:9229
    networks:
      - royal-network
    volumes:
      - ../:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - db
    stdin_open: true
    restart: unless-stopped

  backend_prod:
    container_name: royal_api_prod
    image: backend_prod:1.0.0
    build:
      context: ../
      target: prod
      dockerfile: ./docker/Dockerfile
    env_file: .env
    command: npm run start:prod
    ports:
      - 5000:5000
      - 9229:9229
    networks:
      - royal-network
    volumes:
      - ../:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - db
    stdin_open: true
    restart: unless-stopped

volumes:
  royal-postgres:
networks:
  royal-network:
